{"version":3,"sources":["pages/CrearFactura.js","pages/Dashboard.js","pages/FacturasCreadas.js","pages/EditarFactura.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","TextArea","Input","tailFormItemLayout","Typography","Text","uuid","v4","wrapperCol","xs","span","sm","WrappedCrearFacturaForm","Form","create","name","props","form","getFieldDecorator","getFieldValue","useState","nombreVendedor","setNombreVendedor","direccionVendedor","setDireccionVendedor","nombreEmpresa","setNombreEmpresa","nombreCliente","setNombreCliente","rutCliente","setRutCliente","giroCliente","setGiroCliente","telefonoCliente","setTelefonoCliente","emailCliente","setEmailCliente","direccionCliente","setDireccionCliente","comunaCliente","setComunaCliente","ciudadCliente","setCiudadCliente","descripcion","setDescripcion","cantidad","setCantidad","precio","setPrecio","itemsProductos","setItemsProductos","iva","setIva","precioFinal","setPrecioFinal","precioNeto","setPrecioNeto","descripcionFactura","setDescripcionFactura","seleccionarPago","setSeleccionarPago","useEffect","arraySum","total","reduce","prev","cur","className","onSubmit","e","a","async","preventDefault","facturaData","items","terms","index","length","key","console","log","axios","post","JSON","stringify","headers","then","response","notification","message","description","resetFields","catch","gutter","Item","label","initialValue","rules","required","onChange","target","value","style","width","val","rows","formatter","parser","replace","onClick","dataItem","type","shape","icon","size","dataSource","columns","title","dataIndex","rowkey","data","disabled","placeholder","textAlign","htmlType","Dashboard","background","padding","bordered","fixed","render","text","record","to","_id","FacturasCreadas","facturas","setFacturas","get","map","resp","scroll","x","y","EditarFactura","id","useParams","Header","Layout","Content","Footer","Sider","Menu","SubMenu","App","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","exact","activeClassName","paddingLeft","cursor","margin","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44d444fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Form,\n  Input,\n  InputNumber,\n  Typography,\n  Select,\n  Row,\n  Col,\n  Button,\n  notification\n  // Tooltip, Icon, AutoComplete,\n} from \"antd\";\n\nimport axios from \"axios\";\nimport uuid from \"uuid\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { Text } = Typography;\n// const AutoCompleteOption = AutoComplete.Option;\n\nconst tableKey = uuid.v4();\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 }\n  }\n};\n\nconst CrearFactura = props => {\n  const { getFieldDecorator, getFieldValue } = props.form;\n\n  // HOOKS\n  const [nombreVendedor, setNombreVendedor] = useState(\"Oscar Cornejo\");\n  const [direccionVendedor, setDireccionVendedor] = useState(\n    \"Rio Vergara 922, La Granja\"\n  );\n  const [nombreEmpresa, setNombreEmpresa] = useState(\"Data4Devs\");\n  const [nombreCliente, setNombreCliente] = useState(\"Fabiola Salazar\");\n  const [rutCliente, setRutCliente] = useState(\"11.111.111-1\");\n  const [giroCliente, setGiroCliente] = useState(\"Servicios Informáticos\");\n  const [telefonoCliente, setTelefonoCliente] = useState(\"123456789\");\n  const [emailCliente, setEmailCliente] = useState(\"fabi@salazar.cl\");\n  const [direccionCliente, setDireccionCliente] = useState(\"Rio Imperial 979\");\n  const [comunaCliente, setComunaCliente] = useState(\"La Granja\");\n  const [ciudadCliente, setCiudadCliente] = useState(\"Santiago\");\n  const [descripcion, setDescripcion] = useState(\n    \"Bidón de 20 litros para agua purificada.\"\n  );\n  const [cantidad, setCantidad] = useState(0);\n  const [precio, setPrecio] = useState(0);\n\n  const [itemsProductos, setItemsProductos] = useState([]);\n\n  const [iva, setIva] = useState(0);\n  const [precioFinal, setPrecioFinal] = useState(0);\n  const [precioNeto, setPrecioNeto] = useState(0);\n  const [descripcionFactura, setDescripcionFactura] = useState(\n    \"Factura Pagada, lista para despacho.\"\n  );\n  const [seleccionarPago, setSeleccionarPago] = useState(\"contado\");\n\n  useEffect(() => {\n    let arraySum = 0;\n\n    var total = itemsProductos.reduce((prev, cur) => {\n      if (cur.cantidad !== 1) {\n        arraySum = arraySum + cur.cantidad * cur.precio;\n        return arraySum;\n      } else {\n        arraySum = arraySum + cur.cantidad * cur.precio;\n        return arraySum;\n      }\n    }, 0);\n\n    setPrecioNeto(total);\n    setIva(precioNeto * 0.19);\n    setPrecioFinal(iva + precioNeto);\n  }, [precio, precioNeto, iva, itemsProductos]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (\n      nombreVendedor === \"\" ||\n      direccionVendedor === \"\" ||\n      nombreEmpresa === \"\" ||\n      nombreCliente === \"\" ||\n      rutCliente === \"\" ||\n      giroCliente === \"\" ||\n      telefonoCliente === \"\" ||\n      emailCliente === \"\" ||\n      direccionCliente === \"\" ||\n      comunaCliente === \"\" ||\n      ciudadCliente === \"\" ||\n      descripcion === \"\" ||\n      cantidad <= 0 ||\n      precio <= 0 ||\n      iva <= 0 ||\n      precioNeto <= 0 ||\n      precioFinal <= 0 ||\n      descripcionFactura === \"\"\n      // || seleccionarPago\n    ) {\n      return;\n    }\n\n    const facturaData = {\n      nombreVendedor,\n      direccionVendedor,\n      nombreEmpresa,\n      nombreCliente,\n      rutCliente,\n      giroCliente,\n      telefonoCliente,\n      emailCliente,\n      direccionCliente,\n      comunaCliente,\n      ciudadCliente,\n      items: itemsProductos,\n      iva,\n      precioNeto,\n      precioFinal,\n      terms: seleccionarPago,\n      descripcionFactura\n    };\n    // Se borra Variable Key que se ocupa para Tabla\n    for (let index = 0; index < facturaData.items.length; index++) {\n      delete facturaData.items[index].key;\n    }\n    console.log(\"Enviando Data!\", facturaData);\n\n    await axios\n      .post(\"/api/crear-factura\", JSON.stringify(facturaData), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(response => {\n        // Respuesta del servidor\n        notification[\"success\"]({\n          message: \"Factura Creada!\",\n          description: \"La factura fue creada con éxito.\"\n        });\n\n        setNombreVendedor(\"\");\n        setDireccionVendedor(\"\");\n        setNombreEmpresa(\"\");\n        setNombreCliente(\"\");\n        setRutCliente(\"\");\n        setGiroCliente(\"\");\n        setTelefonoCliente(0);\n        setEmailCliente(\"\");\n        setDireccionCliente(\"\");\n        setComunaCliente(\"\");\n        setCiudadCliente(\"\");\n        setDescripcion(\"\");\n        setCantidad(0);\n        setPrecio(0);\n        setItemsProductos([])\n        setIva(0);\n        setPrecioNeto(0);\n        setPrecioFinal(0);\n        setDescripcionFactura(\"\");\n        setSeleccionarPago(\"contado\");\n        props.form.resetFields();\n      })\n      .catch(e => {\n        console.log(e);\n\n        notification[\"error\"]({\n          message: \"Factura No Creada!\",\n          description: \"La factura no pudo se creada.\"\n        });\n      });\n  };\n\n  const addItem = () => {\n    if (descripcion === \"\" || cantidad <= 0 || precio <= 0) {\n      return;\n    }\n    const dataItem = {\n      descripcion,\n      cantidad,\n      precio,\n      key: uuid.v4()\n    };\n    setItemsProductos([...itemsProductos, dataItem]);\n  };\n\n  // COLUMNS\n  const columns = [\n    {\n      title: \"Descripción\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\"\n    },\n    {\n      title: \"Cantidad\",\n      dataIndex: \"cantidad\",\n      key: \"cantidad\"\n    },\n    {\n      title: \"Precio Unitario\",\n      dataIndex: \"precio\",\n      key: \"precio\"\n    }\n  ];\n\n  return (\n    <Form className=\"ant-advanced-search-form\" onSubmit={handleSubmit}>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Nombre del Vendedor\">\n            {getFieldDecorator(\"nombreVendedor\", {\n              initialValue: nombreVendedor,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre del Vendedor.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreVendedor(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Dirección del Vendedor\">\n            {getFieldDecorator(\"direccionVendedor\", {\n              initialValue: direccionVendedor,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Dirección del Vendedor.\"\n                }\n              ]\n            })(<Input onChange={e => setDireccionVendedor(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={14}>\n          <Form.Item label=\"Nombre de la Empresa\">\n            {getFieldDecorator(\"nombreEmpresa\", {\n              initialValue: nombreEmpresa,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreEmpresa(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={10}>\n          <Form.Item label=\"RUT del Cliente\">\n            {getFieldDecorator(\"rutCliente\", {\n              initialValue: rutCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el RUT del Cliente.\"\n                }\n              ]\n            })(<Input onChange={e => setRutCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={16}>\n          <Form.Item label=\"Giro de la Empresa\">\n            {getFieldDecorator(\"giroCliente\", {\n              initialValue: giroCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Giro de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setGiroCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item label=\"Teléfono Empresa\">\n            {getFieldDecorator(\"telefonoCliente\", {\n              initialValue: telefonoCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Teléfono de la Empresa.\"\n                }\n              ]\n            })(\n              <InputNumber\n                style={{ width: \"100%\" }}\n                onChange={val => setTelefonoCliente(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Email Empresa\">\n            {getFieldDecorator(\"emailEmpresa\", {\n              initialValue: emailCliente,\n              rules: [\n                // {\n                //   type: \"email\",\n                //   message: \"Favor ingresar un Email válido.\"\n                // },\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Email de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setEmailCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Nombre de Cliente\">\n            {getFieldDecorator(\"nombreCliente\", {\n              initialValue: nombreCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre del Cliente.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={24}>\n          <Form.Item label=\"Dirección de la Empresa\">\n            {getFieldDecorator(\"direccionCliente\", {\n              initialValue: direccionCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Dirección de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setDireccionCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Comuna\">\n            {getFieldDecorator(\"comunaCliente\", {\n              initialValue: comunaCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Comuna de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setComunaCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudadCliente\", {\n              initialValue: ciudadCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Ciudad de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setCiudadCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={10}>\n          <Form.Item label=\"Descripción Producto\">\n            {getFieldDecorator(\"descripcionProducto\", {\n              initialValue: descripcion,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese una Descripción para el Producto.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={e => setDescripcion(e.target.value)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item label=\"Cantidad\">\n            {getFieldDecorator(\"cantidad\", {\n              initialValue: cantidad,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese una Cantidad\"\n                }\n              ]\n            })(\n              <InputNumber\n                style={{ width: \"100%\" }}\n                onChange={val => setCantidad(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item label=\"Precio Unitario\">\n            {getFieldDecorator(\"precioUnitario\", {\n              initialValue: precio,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Unitario\"\n                }\n              ]\n            })(\n              <InputNumber\n                formatter={value => `$ ${value}`}\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecio(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={2}>\n          <Button\n            onClick={addItem}\n            type=\"primary\"\n            shape=\"circle\"\n            icon=\"plus\"\n            size=\"large\"\n          />\n        </Col>\n      </Row>\n\n      {/* {itemsProductos !== null && itemsProductos.map( (resp, index) => {\n                return (\n                    <Row key={index*30} gutter={24}>\n                        <Col span={14}><Text>{resp.descripcion}</Text></Col>\n                        <Col span={5}> <Text>{resp.cantidad}</Text></Col>\n                        <Col span={5}> <Text>{resp.precio}</Text></Col>\n                    </Row>\n                )\n            })} */}\n      {itemsProductos !== null && (\n        <Table\n          dataSource={itemsProductos}\n          columns={columns}\n          rowkey={data => data.key}\n        />\n      )}\n\n      <Row gutter={24}>\n        <Col span={5}>\n          <Form.Item label=\"Monto Neto\">\n            {getFieldDecorator(\"precioNeto\", {\n              initialValue: precioNeto,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecioNeto(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={5}>\n          <Form.Item label=\"IVA (19%)\">\n            {getFieldDecorator(\"iva\", {\n              initialValue: iva,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setIva(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={5}>\n          <Form.Item label=\"Precio Final\">\n            {getFieldDecorator(\"precioFinal\", {\n              initialValue: precioFinal,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecioFinal(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={9}>\n          <Form.Item label=\"Forma de Pago\">\n            {getFieldDecorator(\"formaPago\", {\n              initialValue: seleccionarPago,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione su Forma de Pago.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder=\"Seleccionar Forma de Pago\"\n                onChange={val => {\n                  setSeleccionarPago(val);\n                }}\n              >\n                <Option value=\"contado\">Contado</Option>\n                <Option value=\"30-dias\">30 días</Option>\n                <Option value=\"60-dias\">60 días</Option>\n              </Select>\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={24}>\n          <Form.Item label=\"Detalle Factura\">\n            {getFieldDecorator(\"descripcionFactura\", {\n              initialValue: descripcionFactura,\n              rules: [\n                {\n                  required: true,\n                  message: \"Favor ingrese una descripción para la factura.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={e => setDescripcionFactura(e.target.value)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col span={24} style={{ textAlign: \"right\" }}>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Registrar Factura\n            </Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nconst WrappedCrearFacturaForm = Form.create({ name: \"crearFactura\" })(\n  CrearFactura\n);\nexport default WrappedCrearFacturaForm;\n","import React from 'react';\n\nimport { Card, Col, Row } from 'antd';\n\nconst Dashboard = () => {\n    return ( \n        <div style={{ background: '#ECECEC', padding: '30px' }}>\n            <Row gutter={16}>\n                <Col span={8}>\n                    <Card title=\"Card title\" bordered={false}>\n                    Card content\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"Card title\" bordered={false}>\n                    Card content\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"Card title\" bordered={false}>\n                    Card content\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n     );\n}\n \nexport default Dashboard;","import React, {useState, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { Table, notification } from 'antd';\n\n\nconst columns = [\n    {\n      title: 'Nombre Empresa',\n      width: 250,\n      dataIndex: 'nombreEmpresa',\n      key: 'nombreEmpresa',\n      fixed: 'left',\n    },\n    {\n      title: 'RUT',\n      width: 150,\n      dataIndex: 'rutCliente',\n      key: 'rutCliente',\n      fixed: 'left',\n    },\n    {\n      title: 'Giro',\n      dataIndex: 'giroCliente',\n      key: 'giroCliente',\n      width: 300,\n    },\n    {\n      title: 'Teléfono',\n      dataIndex: 'telefonoCliente',\n      key: 'telefonoCliente',\n      width: 150,\n    },\n    {\n      title: 'Email',\n      dataIndex: 'emailCliente',\n      key: 'emailCliente',\n      width: 200,\n    },\n    {\n      title: 'Nombre Contacto',\n      dataIndex: 'nombreCliente',\n      key: 'nombreCliente',\n      width: 250,\n    },\n    {\n      title: 'Valor Factura',\n      dataIndex: 'precioFinal',\n      key: 'precioFinal',\n      width: 200,\n    },\n    {\n      title: 'Action',\n      key: 'operation',\n      fixed: 'right',\n      width: 150,\n      render: (text, record) => <Link to={'/editar-factura' + record._id}>Editar</Link>\n    },\n];\n\n\nconst FacturasCreadas = () => {\n\n    const [facturas, setFacturas] = useState([]);\n\n    useEffect(() => {\n    axios.get(\"/api/obtener-factura/all\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(response => {\n        // Respuesta del servidor\n        console.log('Facturas Ok!', response.data);\n        response.data.map( resp => {\n            if (resp.nombreEmpresa === '') {\n                resp.data.nombreEmpresa = 'No Especificado'\n            }\n            return resp\n        });\n        \n        setFacturas(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n        notification[\"error\"]({\n          message: \"¡Oops!\",\n          description: \"Las facturas no se pudieron cargar, favor inténtalo más tarde.\"\n        });\n      });\n    }, []);\n\n    return ( \n        <Table columns={columns} dataSource={facturas} scroll={{ x: 1000, y: 450 }} />\n     );\n}\n \nexport default FacturasCreadas;","import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Form,\n  Input,\n  InputNumber,\n  Typography,\n  Select,\n  Row,\n  Col,\n  Button,\n  notification\n  // Tooltip, Icon, AutoComplete,\n} from \"antd\";\n\nimport axios from \"axios\";\nimport uuid from \"uuid\";\n\nimport {useParams} from \"react-router-dom\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\n\nconst EditarFactura = props => {\n  const { getFieldDecorator, getFieldValue } = props.form;\n\n  const [nombreVendedor, setNombreVendedor] = useState(\"Oscar Cornejo\");\n  const [direccionVendedor, setDireccionVendedor] = useState(\n    \"Rio Vergara 922, La Granja\"\n  );\n  const [nombreEmpresa, setNombreEmpresa] = useState(\"Data4Devs\");\n  const [nombreCliente, setNombreCliente] = useState(\"Fabiola Salazar\");\n  const [rutCliente, setRutCliente] = useState(\"11.111.111-1\");\n  const [giroCliente, setGiroCliente] = useState(\"Servicios Informáticos\");\n  const [telefonoCliente, setTelefonoCliente] = useState(\"123456789\");\n  const [emailCliente, setEmailCliente] = useState(\"fabi@salazar.cl\");\n  const [direccionCliente, setDireccionCliente] = useState(\"Rio Imperial 979\");\n  const [comunaCliente, setComunaCliente] = useState(\"La Granja\");\n  const [ciudadCliente, setCiudadCliente] = useState(\"Santiago\");\n  const [descripcion, setDescripcion] = useState(\n    \"Bidón de 20 litros para agua purificada.\"\n  );\n  const [cantidad, setCantidad] = useState(0);\n  const [precio, setPrecio] = useState(0);\n\n  const [itemsProductos, setItemsProductos] = useState([]);\n\n  const [iva, setIva] = useState(0);\n  const [precioFinal, setPrecioFinal] = useState(0);\n  const [precioNeto, setPrecioNeto] = useState(0);\n  const [descripcionFactura, setDescripcionFactura] = useState(\n    \"Factura Pagada, lista para despacho.\"\n  );\n  const [seleccionarPago, setSeleccionarPago] = useState(\"contado\");\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    axios\n      .get(\"/api/obtener-factura/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(response => {\n        // Respuesta del servidor\n        console.log(\"Factura Ok!\", response);\n      })\n      .catch(e => {\n        console.log(e);\n        notification[\"error\"]({\n          message: \"¡Oops!\",\n          description:\n            \"Las facturas no se pudo cargar, favor inténtalo más tarde.\"\n        });\n      });\n  }, []);\n\n  const addItem = () => {\n    if (descripcion === \"\" || cantidad <= 0 || precio <= 0) {\n      return;\n    }\n    const dataItem = {\n      descripcion,\n      cantidad,\n      precio,\n      key: uuid.v4()\n    };\n    setItemsProductos([...itemsProductos, dataItem]);\n  };\n\n  const actualizarFactura = () => {\n    console.log(\"Actualizando!\");\n  };\n\n  const columns = [\n    {\n      title: \"Descripción\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\"\n    },\n    {\n      title: \"Cantidad\",\n      dataIndex: \"cantidad\",\n      key: \"cantidad\"\n    },\n    {\n      title: \"Precio Unitario\",\n      dataIndex: \"precio\",\n      key: \"precio\"\n    }\n  ];\n\n  return (\n    <Form className=\"ant-advanced-search-form\" onSubmit={actualizarFactura}>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Nombre del Vendedor\">\n            {getFieldDecorator(\"nombreVendedor\", {\n              initialValue: nombreVendedor,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre del Vendedor.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreVendedor(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Dirección del Vendedor\">\n            {getFieldDecorator(\"direccionVendedor\", {\n              initialValue: direccionVendedor,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Dirección del Vendedor.\"\n                }\n              ]\n            })(<Input onChange={e => setDireccionVendedor(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={14}>\n          <Form.Item label=\"Nombre de la Empresa\">\n            {getFieldDecorator(\"nombreEmpresa\", {\n              initialValue: nombreEmpresa,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreEmpresa(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={10}>\n          <Form.Item label=\"RUT del Cliente\">\n            {getFieldDecorator(\"rutCliente\", {\n              initialValue: rutCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el RUT del Cliente.\"\n                }\n              ]\n            })(<Input onChange={e => setRutCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={16}>\n          <Form.Item label=\"Giro de la Empresa\">\n            {getFieldDecorator(\"giroCliente\", {\n              initialValue: giroCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Giro de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setGiroCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item label=\"Teléfono Empresa\">\n            {getFieldDecorator(\"telefonoCliente\", {\n              initialValue: telefonoCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Teléfono de la Empresa.\"\n                }\n              ]\n            })(\n              <InputNumber\n                style={{ width: \"100%\" }}\n                onChange={val => setTelefonoCliente(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Email Empresa\">\n            {getFieldDecorator(\"emailEmpresa\", {\n              initialValue: emailCliente,\n              rules: [\n                // {\n                //   type: \"email\",\n                //   message: \"Favor ingresar un Email válido.\"\n                // },\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Email de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setEmailCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Nombre de Cliente\">\n            {getFieldDecorator(\"nombreCliente\", {\n              initialValue: nombreCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese el Nombre del Cliente.\"\n                }\n              ]\n            })(<Input onChange={e => setNombreCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={24}>\n          <Form.Item label=\"Dirección de la Empresa\">\n            {getFieldDecorator(\"direccionCliente\", {\n              initialValue: direccionCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Dirección de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setDireccionCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item label=\"Comuna\">\n            {getFieldDecorator(\"comunaCliente\", {\n              initialValue: comunaCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Comuna de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setComunaCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudadCliente\", {\n              initialValue: ciudadCliente,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese la Ciudad de la Empresa.\"\n                }\n              ]\n            })(<Input onChange={e => setCiudadCliente(e.target.value)} />)}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={10}>\n          <Form.Item label=\"Descripción Producto\">\n            {getFieldDecorator(\"descripcionProducto\", {\n              initialValue: descripcion,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese una Descripción para el Producto.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={e => setDescripcion(e.target.value)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item label=\"Cantidad\">\n            {getFieldDecorator(\"cantidad\", {\n              initialValue: cantidad,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese una Cantidad\"\n                }\n              ]\n            })(\n              <InputNumber\n                style={{ width: \"100%\" }}\n                onChange={val => setCantidad(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={6}>\n          <Form.Item label=\"Precio Unitario\">\n            {getFieldDecorator(\"precioUnitario\", {\n              initialValue: precio,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Unitario\"\n                }\n              ]\n            })(\n              <InputNumber\n                formatter={value => `$ ${value}`}\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecio(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={2}>\n          <Button\n            onClick={addItem}\n            type=\"primary\"\n            shape=\"circle\"\n            icon=\"plus\"\n            size=\"large\"\n          />\n        </Col>\n      </Row>\n\n      {/* {itemsProductos !== null && itemsProductos.map( (resp, index) => {\n                return (\n                    <Row key={index*30} gutter={24}>\n                        <Col span={14}><Text>{resp.descripcion}</Text></Col>\n                        <Col span={5}> <Text>{resp.cantidad}</Text></Col>\n                        <Col span={5}> <Text>{resp.precio}</Text></Col>\n                    </Row>\n                )\n            })} */}\n      {itemsProductos !== null && (\n        <Table\n          dataSource={itemsProductos}\n          columns={columns}\n          rowkey={data => data.key}\n        />\n      )}\n\n      <Row gutter={24}>\n        <Col span={5}>\n          <Form.Item label=\"Monto Neto\">\n            {getFieldDecorator(\"precioNeto\", {\n              initialValue: precioNeto,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecioNeto(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={5}>\n          <Form.Item label=\"IVA (19%)\">\n            {getFieldDecorator(\"iva\", {\n              initialValue: iva,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setIva(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={5}>\n          <Form.Item label=\"Precio Final\">\n            {getFieldDecorator(\"precioFinal\", {\n              initialValue: precioFinal,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un Precio Precio Final\"\n                }\n              ]\n            })(\n              <InputNumber\n                disabled\n                formatter={value =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n                }\n                parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                style={{ width: \"100%\" }}\n                onChange={val => setPrecioFinal(val)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={24}>\n        <Col span={9}>\n          <Form.Item label=\"Forma de Pago\">\n            {getFieldDecorator(\"formaPago\", {\n              initialValue: seleccionarPago,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione su Forma de Pago.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder=\"Seleccionar Forma de Pago\"\n                onChange={val => {\n                  setSeleccionarPago(val);\n                }}\n              >\n                <Option value=\"contado\">Contado</Option>\n                <Option value=\"30-dias\">30 días</Option>\n                <Option value=\"60-dias\">60 días</Option>\n              </Select>\n            )}\n          </Form.Item>\n        </Col>\n\n        <Col span={24}>\n          <Form.Item label=\"Detalle Factura\">\n            {getFieldDecorator(\"descripcionFactura\", {\n              initialValue: descripcionFactura,\n              rules: [\n                {\n                  required: true,\n                  message: \"Favor ingrese una descripción para la factura.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={e => setDescripcionFactura(e.target.value)}\n              />\n            )}\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col span={24} style={{ textAlign: \"right\" }}>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Registrar Factura\n            </Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default EditarFactura;\n","import React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n// import {withRouter} from 'react-router-dom';\nimport { Layout, Menu, Icon } from \"antd\";\n\n// PAGES\nimport CrearFactura from \"./pages/CrearFactura\";\nimport Dashboard from \"./pages/Dashboard\";\nimport FacturasCreadas from \"./pages/FacturasCreadas\";\nimport EditarFactura from \"./pages/EditarFactura\";\n\n// import moment from 'moment';\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nfunction App() {\n  // const dateFormat = 'DD-MM-YYYY';\n  // const [startDate, setStartDate] = useState(moment());\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed);\n  };\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    // <div className=\"App\">\n    //   <DatePicker\n    //     value={startDate}\n    //     format={dateFormat}\n    //     onChange={ (date) => setStartDate(date) } />\n\n    //     <div style={{ marginTop: 20 }}>\n    //       Fecha Seleccionada {startDate.format(dateFormat)}\n    //     </div>\n    // </div>\n    <Router>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider\n          collapsible\n          collapsed={collapsed}\n          onCollapse={onCollapse}\n        >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n            \n            <Menu.Item key=\"1\">\n              <Icon type=\"pie-chart\" />\n              <span>Deshboard</span>\n              <NavLink exact to=\"/\" activeClassName=\"menu-item-selected\" className=\"nav-text\" />\n            </Menu.Item>\n\n            <Menu.Item key=\"2\">\n              <Icon type=\"desktop\" />\n              <span>Crear Factura</span>\n              <NavLink exact to=\"/crear-factura\" activeClassName=\"menu-item-selected\" className=\"nav-text\" />\n            </Menu.Item>\n\n            <Menu.Item key=\"3\">\n              <Icon type=\"desktop\" />\n              <span>Facturas Creadas</span>\n              <NavLink exact to=\"/facturas-creadas\" activeClassName=\"menu-item-selected\" className=\"nav-text\" />\n            </Menu.Item>\n\n\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: \"#fff\", padding: 0, paddingLeft: 16 }}>\n            <Icon\n              className=\"trigger\"\n              type={collapsed ? \"menu-unfold\" : \"menu-fold\"}\n              style={{ cursor: \"pointer\" }}\n              onClick={toggle}\n            />\n          </Header>\n          <Content\n            style={{\n              margin: \"24px 16px\",\n              padding: 24,\n              background: \"#fff\",\n              minHeight: 280\n            }}\n          >\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/crear-factura\" render={ (props) => <CrearFactura {...props} />} />\n            <Route exact path=\"/editar-factura/:id\" component={EditarFactura} />\n            <Route exact path=\"/facturas-creadas\" component={FacturasCreadas} />\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Ant Design ©2016 Created by Ant UED\n          </Footer>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}